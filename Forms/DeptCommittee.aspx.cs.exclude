using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Collections.Generic;
using System.Linq;
using BL.Data;
public partial class Forms_DeptCommittee : System.Web.UI.Page
{
    BAL bal = new BAL();
    private enum MethodCallMode { PageLoad = 1, EventDriven = 2 }
    public override string StyleSheetTheme
    {
        get
        {
            return Utils.IsPrintMode() ? Utils.PrinterStyleSheet : base.StyleSheetTheme;
        }
    }
    protected void Page_Load(object sender, EventArgs e)
    {

        if (IsPostBack)
        {
            return;
        }
        LoadCommittee(Master.ApplicationID);
        if (Master.CurrentFormLevel == -1)
        {
            Response.Redirect("Message.aspx?applicationID=" + Master.ApplicationID + "&roleID=" + Master.CurRoleID);
            return;
        }
        else if (Master.CurrentFormLevel == 6)
        {

            Instruction1.Visible = false;
        }
        if (Master.CurrentFormLevel == 2 || Master.CurrentFormLevel == 5)
            pnlDeptComm.Enabled = true;
        else
            pnlDeptComm.Enabled = false;
        DepartmentFaculty1.LoadFaculty(Master.ApplicationID);
        Instruction1.Text = Master.CurrentFormInstruction;
        //hide buttons when printing
        if (Utils.IsPrintMode())
        {
            Instruction1.Visible = false;
            DepartmentFaculty1.Visible = false;

        }
    }


    private void ShowError(string message)
    {
        lblMessage.ForeColor = System.Drawing.Color.Red;
        lblMessage.Text = message;
        Master.ReportFailure(message);
    }

    private void ShowMessage(string message)
    {
        lblMessage.ForeColor = System.Drawing.Color.Blue;
        lblMessage.Text = message;
        Master.ReportSuccess();
    }
    public void LoadCommittee(int applicationID)
    {
        List<Form_DepartmentCommittee> lfdc = bal.GetForm_DepartmentCommittee(applicationID);
        if (lfdc.Count == 0)
            return;
        for (int i = 0; i < lfdc.Count; i++)
        {

            (pnlDeptComm.FindControl("tbDC" + (lfdc[i].Position + 1) + "EmailID") as TextBox).Text = bal.GetEmployeeByPK(lfdc[i].EmployeeID)[0].KFUPMUserID;
            LoadEmployee(lfdc[i].Position + 1, (int)MethodCallMode.PageLoad);
        }
        CheckFormCompletion(applicationID);
    }
    protected void tbDC1EmailID_TextChanged(object sender, EventArgs e)
    {
        LoadEmployee(1, (int)MethodCallMode.EventDriven);
    }
    protected void tbDC2EmailID_TextChanged(object sender, EventArgs e)
    {
        LoadEmployee(2, (int)MethodCallMode.EventDriven);
    }
    protected void tbDC3EmailID_TextChanged(object sender, EventArgs e)
    {
        LoadEmployee(3, (int)MethodCallMode.EventDriven);
    }
    protected void tbDC4EmailID_TextChanged(object sender, EventArgs e)
    {
        LoadEmployee(4, (int)MethodCallMode.EventDriven);
    }
    protected void tbDC5EmailID_TextChanged(object sender, EventArgs e)
    {
        LoadEmployee(5, (int)MethodCallMode.EventDriven);
    }
    private void LoadEmployee(int rowNumber, int methodCallMode)
    {
        string EmailID = (pnlDeptComm.FindControl("tbDC" + rowNumber + "EmailID") as TextBox).Text;
        if (EmailID.Trim().Length == 0)
        {
            (pnlDeptComm.FindControl("lblError" + rowNumber) as Label).Text = "";
            bal.DeleteFormDepartmentCommittee(Master.ApplicationID, (byte)(rowNumber - 1));
            bal.DeleteApplicationRoles(Master.ApplicationID, GetDeptCommRoleID(rowNumber));
            PopulateLabels(rowNumber);
        }
        else
        {

            if (bal.GetEmployeeByEmailID(EmailID).Count == 0)
            {
                (pnlDeptComm.FindControl("lblError" + rowNumber) as Label).Text = "Employee does not exist";
                bal.DeleteFormDepartmentCommittee(Master.ApplicationID, (byte)(rowNumber - 1));
                bal.DeleteApplicationRoles(Master.ApplicationID, GetDeptCommRoleID(rowNumber));
                PopulateLabels(rowNumber);
            }
            else
            {
                Employee emp = bal.GetEmployeeByEmailID(EmailID)[0];
                if (EmailID.ToLower() == emp.KFUPMUserID.ToLower() && methodCallMode == (int)MethodCallMode.EventDriven
                    && (pnlDeptComm.FindControl("lblName" + rowNumber) as Label).Text != "")
                {
                    return;
                }
                else
                {
                    PopulateLabels(rowNumber, emp, methodCallMode);
                }
            }
        }
    }
    private void PopulateLabels(int rowNo, Employee emp, int methodCallMode)
    {
        int appID = int.Parse(Request.Params.Get("applicationID").ToString());
        string toRank = bal.GetApplication(appID)[0].ForRank;

        //if (!IsRankEligible(toRank, emp.Rank))
        //{
        //    (pnlDeptComm.FindControl("lblError" + rowNo) as Label).Text = "Suggested Member Rank is less than the Candidate's Rank";
        //    return;
        //}
        if (!IsInvolvedinApp(emp.EmployeeID, appID))
        {
            (pnlDeptComm.FindControl("lblError" + rowNo) as Label).Text = "The Department Committee Member cannot be the Candidate, Dept Chairman, Dean or Vice Rector";
            return;
        }
        if (methodCallMode == (int)MethodCallMode.PageLoad)
        {
            if (bal.GetForm_DepartmentCommittee(appID).Where(dc => dc.EmployeeID == emp.EmployeeID).Count() > 1)
            {
                (pnlDeptComm.FindControl("lblError" + rowNo) as Label).Text = "The name is already selected";
                return;
            }
        }
        else
        {
            if (bal.GetForm_DepartmentCommittee(appID).Where(dc => dc.EmployeeID == emp.EmployeeID).Count() > 0)
            {
                (pnlDeptComm.FindControl("lblError" + rowNo) as Label).Text = "The name is already selected";
                return;
            }
        }
        (pnlDeptComm.FindControl("lblError" + rowNo) as Label).Text = "";
        (pnlDeptComm.FindControl("lblName" + rowNo) as Label).Text = emp.Name;
        (pnlDeptComm.FindControl("lblRank" + rowNo) as Label).Text = emp.Rank;
        (pnlDeptComm.FindControl("lblDepartment" + rowNo) as Label).Text = emp.Department1.Name;
        (pnlDeptComm.FindControl("lblEmail" + rowNo) as Label).Text = emp.KFUPMUserID;
        if (bal.GetForm_DepartmentCommitteeByPK(appID, emp.EmployeeID).Count == 1)
        {
            bal.UpdateFormDepartmentCommittee(appID, (byte)(rowNo - 1), emp.EmployeeID);
            bal.DeleteApplicationRoles(appID, GetDeptCommRoleID(rowNo));
            bal.InsertApplicationRoles(appID, emp.EmployeeID, GetDeptCommRoleID(rowNo));
        }
        else
        {
            bal.InsertFormDepartmentCommittee(appID, (byte)(rowNo - 1), emp.EmployeeID);
            bal.InsertApplicationRoles(appID, emp.EmployeeID, GetDeptCommRoleID(rowNo));
        }
        
        CheckFormCompletion(appID);
    }

    private void CheckFormCompletion(int appID)
    {
        if (bal.GetForm_DepartmentCommittee(appID).Where(dc => dc.Position == 0).Count() == 0)
        {
            ShowError("Department committee chairman is not selected.");
            return;
        }
        if (bal.GetForm_DepartmentCommittee(appID).Count >= 3)
        {
            ShowMessage("Department Committee is Completed");
        }
        else
        {
            ShowError("Atleast three entries of department committee members are not complete");
        }
    }



    private byte GetDeptCommRoleID(int position)
    {
        if (position == 1)
        {
            return (byte)RoleID.DepartmentCommitteeChair;
        }
        else
        {
            return (byte)(position + (byte)RoleID.DepartmentCommitteeMember1 - 2);
        }
    }
    private void PopulateLabels(int i)
    {
        (pnlDeptComm.FindControl("lblName" + i) as Label).Text = "";
        (pnlDeptComm.FindControl("lblRank" + i) as Label).Text = "";
        (pnlDeptComm.FindControl("lblDepartment" + i) as Label).Text = "";
        (pnlDeptComm.FindControl("lblEmail" + i) as Label).Text = "";
    }
    private bool IsRankEligible(string toRank, string p)
    {
        if (toRank == p)
            return true;
        else if (toRank == "Associate Professor" && p == "Professor")
            return true;
        else return false;
    }
    private bool IsInvolvedinApp(string EmployeeID, int appID)
    {

        foreach (Application_Role ar in bal.GetApplicationRole(appID))
        {
            if ((ar.RoleID == 1 || ar.RoleID == 2 || ar.RoleID == 4 || ar.RoleID == 5 || ar.RoleID == 6 || ar.RoleID == 8) && ar.EmployeeID == EmployeeID)
                return false;
        }

        return true;
    }
    protected void lbtnDelete_Click(object sender, EventArgs e)
    {
        int rowNumber = Int32.Parse(((LinkButton)sender).ID.Replace("lbtnDelete", ""));
        bal.DeleteFormDepartmentCommittee(Master.ApplicationID, (byte)(rowNumber - 1));
        bal.DeleteApplicationRoles(Master.ApplicationID, GetDeptCommRoleID(rowNumber));
        (pnlDeptComm.FindControl("tbDC" + rowNumber + "EmailID") as TextBox).Text = "";
        (pnlDeptComm.FindControl("lblError" + rowNumber) as Label).Text = "";
        PopulateLabels(rowNumber);
        CheckFormCompletion(Master.ApplicationID);

    }
}
